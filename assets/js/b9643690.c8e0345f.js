"use strict";(self.webpackChunkapache_streampark_website=self.webpackChunkapache_streampark_website||[]).push([[3078],{15680:(e,n,t)=>{t.d(n,{xA:()=>l,yg:()=>g});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(g,i(i({ref:n},l),{},{components:t})):r.createElement(g,i({ref:n},l))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},21564:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(58168),a=(t(96540),t(15680));const o={id:"k8s-pvc-integration",title:"Kubernetes PVC Resource usage",sidebar_position:2},i=void 0,s={unversionedId:"flink-k8s/k8s-pvc-integration",id:"flink-k8s/k8s-pvc-integration",title:"Kubernetes PVC Resource usage",description:"Resource usage instructions of K8s PVC",source:"@site/docs/flink-k8s/2-k8s-pvc-integration.md",sourceDirName:"flink-k8s",slug:"/flink-k8s/k8s-pvc-integration",permalink:"/docs/flink-k8s/k8s-pvc-integration",draft:!1,editUrl:"https://github.com/apache/incubator-streampark-website/edit/dev/docs/flink-k8s/2-k8s-pvc-integration.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"k8s-pvc-integration",title:"Kubernetes PVC Resource usage",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Flink on K8s ",permalink:"/docs/flink-k8s/k8s-dev"},next:{title:"Hadoop Resource Integration",permalink:"/docs/flink-k8s/hadoop-resource-integration"}},c={},p=[{value:"Resource usage instructions of K8s PVC",id:"resource-usage-instructions-of-k8s-pvc",level:2}],l={toc:p},u="wrapper";function d(e){let{components:n,...o}=e;return(0,a.yg)(u,(0,r.A)({},l,o,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"resource-usage-instructions-of-k8s-pvc"},"Resource usage instructions of K8s PVC"),(0,a.yg)("p",null,"The support for pvc resource(mount file resources such as checkpoint/savepoint/logs and so on) is based on pod-template at current version\u3002"),(0,a.yg)("p",null,"Users do not have to concern the Native-Kubernetes Session.It will be processed when Session Cluster is constructed .Native-Kubernetes Application can be constructed by configuring on StreamPark webpage using ",(0,a.yg)("inlineCode",{parentName:"p"},"pod-template"),"\u3001",(0,a.yg)("inlineCode",{parentName:"p"},"jm-pod-template"),"\u3001",(0,a.yg)("inlineCode",{parentName:"p"},"tm-pod-template"),"."),(0,a.yg)("br",null),(0,a.yg)("p",null,"Here is a brief example. Two PVC ",(0,a.yg)("inlineCode",{parentName:"p"},"flink-checkpoint"),"\uff0c ",(0,a.yg)("inlineCode",{parentName:"p"},"flink-savepoint")," should be constructed in advance"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Kubernetes PVC",src:t(78800).A,width:"2476",height:"1842"})),(0,a.yg)("p",null,"'pod-template' can be configured as below \uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-template\nspec:\n  containers:\n    - name: flink-main-container\n      volumeMounts:\n        - name: checkpoint-pvc\n          mountPath: /opt/flink/checkpoints\n        - name: savepoint-pvc\n          mountPath: /opt/flink/savepoints\n  volumes:\n    - name: checkpoint-pvc\n      persistentVolumeClaim:\n        claimName: flink-checkpoint\n    - name: savepoint-pvc\n      persistentVolumeClaim:\n        claimName: flink-savepoint\n")),(0,a.yg)("p",null,"There are three ways to provide the dependency when using ",(0,a.yg)("inlineCode",{parentName:"p"},"rocksdb-backend"),"."),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Flink Base Docker Image contains the dependency\uff08user fix the dependency conflict by themself\uff09;")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Put the dependency ",(0,a.yg)("inlineCode",{parentName:"p"},"flink-statebackend-rocksdb_xx.jar")," to  the path ",(0,a.yg)("inlineCode",{parentName:"p"},"Workspace/jars")," in StreamPark ;")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Add the rockdb-backend dependency to StreamPark Dependency(StreamPark will fix the conflict automatically) \uff1a"),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"rocksdb dependency",src:t(5818).A,width:"1698",height:"926"})))),(0,a.yg)("br",null),(0,a.yg)("p",null,"We will provide a graceful way to generate pod-template configuration to simplify the procedure of k8s-pvc mounting in future version."))}d.isMDXComponent=!0},78800:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/k8s_pvc-cdeee4dafe036102e017aad3b6c13f5d.png"},5818:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/rocksdb_dependency-932be3682bef8d8cd169522c00cfd12b.png"}}]);