"use strict";(self.webpackChunkapache_streampark_website=self.webpackChunkapache_streampark_website||[]).push([[6749],{15680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>y});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=r.createContext({}),u=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(m.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,m=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=u(n),p=o,y=l["".concat(m,".").concat(p)]||l[p]||d[p]||i;return n?r.createElement(y,a(a({ref:t},s),{},{components:n})):r.createElement(y,a({ref:t},s))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var c={};for(var m in t)hasOwnProperty.call(t,m)&&(c[m]=t[m]);c.originalType=e,c[l]="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},73119:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var r=n(58168),o=(n(96540),n(15680));const i={id:"become_committer",title:"Become A Committer",sidebar_position:2},a=void 0,c={unversionedId:"contribution_guide/become_committer",id:"contribution_guide/become_committer",title:"Become A Committer",description:"\x3c!--",source:"@site/community/contribution_guide/become_committer.md",sourceDirName:"contribution_guide",slug:"/contribution_guide/become_committer",permalink:"/community/contribution_guide/become_committer",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"become_committer",title:"Become A Committer",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Mailing Lists",permalink:"/community/contribution_guide/mailing_lists"},next:{title:"Become A PMC member",permalink:"/community/contribution_guide/become_pmc_member"}},m={},u=[{value:"Become A Committer of Apache StreamPark",id:"become-a-committer-of-apache-streampark",level:2},{value:"Committer requirements:",id:"committer-requirements",level:2},{value:"Continuous contributions",id:"continuous-contributions",level:3},{value:"Quality of contributions",id:"quality-of-contributions",level:3},{value:"Community involvement",id:"community-involvement",level:3}],s={toc:u},l="wrapper";function d(e){let{components:t,...n}=e;return(0,o.yg)(l,(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"become-a-committer-of-apache-streampark"},"Become A Committer of Apache StreamPark"),(0,o.yg)("p",null,"Anyone being supportive of the community and working in any of the\nCoPDoC areas can become an Apache StreamPark committer. The CoPDoC is an\nacronym from ASF to describe how we recognize your contributions not\nonly by code."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"(Co)mmunity")," - You can join us via our mailing list, issue\ntrackers, discussions page to interact with community members, and\nshare vision and knowledge"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"(P)roject")," - a clear vision and consensus are needed"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"(Do)cumentation")," - without it, the stuff remains only in the minds\nof the authors"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"(C)ode")," - discussion goes nowhere without code")),(0,o.yg)("p",null,"Apache StreamPark community strives to be meritocratic. Thus, once someone\nhas contributed sufficiently to any area of CoPDoC they can be a\ncandidate for committer-ship and at last voted in as a StreamPark\ncommitter. Being an Apache StreamPark committer does not necessarily mean\nyou must commit code with your commit privilege to the codebase; it\nmeans you are committed to the StreamPark project and are productively\ncontributing to our community's success."),(0,o.yg)("h2",{id:"committer-requirements"},"Committer requirements:"),(0,o.yg)("p",null,"There are no strict rules for becoming a committer or PPMC member.\nCandidates for new committers are typically people that are active\ncontributors and community members. Anyway, if the rules can be\nclarified a little bit, it can somehow clear the doubts in the minds\nof contributors and make the community more transparent, reasonable,\nand fair."),(0,o.yg)("h3",{id:"continuous-contributions"},"Continuous contributions"),(0,o.yg)("p",null,"Committer candidates should have a decent amount of continuous\nengagements and contributions (fixing bugs, adding new features,\nwriting documentation, maintaining issues boards, code review, or answering\ncommunity questions) to StreamPark either by contributing to the codebase\nof the main website or StreamPark's GitHub repositories."),(0,o.yg)("h3",{id:"quality-of-contributions"},"Quality of contributions"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"A solid general understanding of the project"),(0,o.yg)("li",{parentName:"ul"},"Well tested, well-designed, following Apache StreamPark coding\nstandards, and simple patches."),(0,o.yg)("li",{parentName:"ul"},"Well-organized and detailed user-oriented documentation.")),(0,o.yg)("h3",{id:"community-involvement"},"Community involvement"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Be active, courteous, and respectful on the dev mailing list and\nhelp mentor newer contributors\nand users."),(0,o.yg)("li",{parentName:"ul"},"Be active, courteous, and respectful on the issue tracker for\nproject maintenance"),(0,o.yg)("li",{parentName:"ul"},"Be active, courteous, and respectful for pull requests reviewing"),(0,o.yg)("li",{parentName:"ul"},"Be involved in the design road map discussions with a professional\nand diplomatic approach even if there is a disagreement"),(0,o.yg)("li",{parentName:"ul"},"Promoting the project by writing articles or holding events")))}d.isMDXComponent=!0}}]);